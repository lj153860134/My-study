<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lingjian_1.dao.IUserDao">

    <!--第二种方法 配置查询结果和实体类属性名的对应关系-->
    <resultMap id="userMap" type="com.lingjian_1.domain.User">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应  column与property关键字可以交换-->
        <result property="userName" column="username"></result>
        <result property="userBirthday" column="birthday"></result>
        <result property="userSex" column="sex"></result>
        <result property="userAddress" column="address"></result>
    </resultMap>

    <sql id="defaultSql">
        select * from user
    </sql>

    <!--配置查询所有-->
    <select id="findAll" resultMap="userMap">
        <include refid="defaultSql">
        </include>
--         select  * from user
    </select>


    <!--根据id查询单个用户-->
    <select id="findById" parameterType="integer" resultMap="userMap">
        select * from user where id=#{userId}
    </select>

    <!--根据name模糊查询-->
    <select id="findByName" parameterType="String" resultMap="userMap">
        select * from user where username like #{userName}
--         select * from user where username like ‘%${value}%’
    </select>

    <!--查询总的用户数-->
    <select id="findCount" resultType="int">
        select count(*) from user
    </select>

    <!--根据条件查询用户-->
    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user
        <where>
            <if test="userName!=null">
                and username=#{userName}
            </if>
            <if test="userSex!=null">
                and sex=#{userSex}
            </if>
        </where>
    </select>

    <!--根据queryVo中提供的id集合 查询用户信息-->
    <select id="findUserInIds" resultMap="userMap" parameterType="queryvo">
        <include refid="defaultSql">
        </include>
        <where>
            <if test="ids!=null and ids.size()>0">
                <foreach collection="ids" open=" id in(" close=")" item="userId" separator=",">
                    #{userId}
                </foreach>
            </if>
        </where>
    </select>


</mapper>